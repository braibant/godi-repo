diff -ur glib-2.37.4.orig/glib/gbacktrace.c glib-2.37.4/glib/gbacktrace.c
--- glib/gbacktrace.c	2013-06-02 23:20:49.000000000 +0000
+++ glib/gbacktrace.c	2013-07-28 19:59:41.097131300 +0000
@@ -259,7 +259,7 @@
   if (IsDebuggerPresent ())
     G_BREAKPOINT ();
   else
-    abort ();
+    g_abort ();
 #endif
 }
 
diff -ur glib-2.37.4.orig/glib/giowin32.c glib-2.37.4/glib/giowin32.c
--- glib/giowin32.c	2013-06-02 23:20:49.000000000 +0000
+++ glib/giowin32.c	2013-07-28 19:59:57.402201800 +0000
@@ -800,7 +800,7 @@
 
     default:
       g_assert_not_reached ();
-      abort ();
+      g_abort ();
     }
   if (channel->debug)
     g_print ("\n");
@@ -947,7 +947,7 @@
 
     default:
       g_assert_not_reached ();
-      abort ();
+      g_abort ();
     }
 }
 
@@ -1012,7 +1012,7 @@
 
     default:
       g_assert_not_reached ();
-      abort ();
+      g_abort ();
     }
   if (channel->debug)
     g_print ("\n");
@@ -1297,7 +1297,7 @@
     default:
       whence = -1; /* Keep the compiler quiet */
       g_assert_not_reached ();
-      abort ();
+      g_abort ();
     }
 
   tmp_offset = offset;
@@ -1692,7 +1692,7 @@
         break;
       default:
         g_assert_not_reached ();
-	abort ();
+	g_abort ();
     }
 
   /* always open 'untranslated' */
@@ -1738,7 +1738,7 @@
         break;
       default:
         g_assert_not_reached ();
-	abort ();
+	g_abort ();
     }
 
   return channel;
@@ -2227,7 +2227,7 @@
 
     default:
       g_assert_not_reached ();
-      abort ();
+      g_abort ();
     }
   
   fd->events = condition;
--- glib/gmessages.c.orig	2014-01-06 19:02:48.000000000 +0000
+++ glib/gmessages.c	2014-01-22 22:44:37.532985700 +0000
@@ -308,7 +308,7 @@
   if (breakpoint)
     G_BREAKPOINT ();
   else
-    abort ();
+    g_abort ();
 }
 
 #ifdef G_OS_WIN32
@@ -1130,7 +1130,7 @@
 	 pretty_function,
 	 expression);
   _g_log_abort (FALSE);
-  abort ();
+  g_abort ();
 }
 
 /**
diff -ur glib-2.37.4.orig/glib/gslice.c glib-2.37.4/glib/gslice.c
--- glib/gslice.c	2013-06-11 02:14:02.000000000 +0000
+++ glib/gslice.c	2013-07-28 20:00:41.525304700 +0000
@@ -1094,7 +1094,7 @@
     return;
   if (G_UNLIKELY (allocator->config.debug_blocks) &&
       !smc_notify_free (mem_block, mem_size))
-    abort();
+    g_abort();
   if (G_LIKELY (acat == 1))             /* allocate through magazine layer */
     {
       ThreadMemory *tmem = thread_memory_from_self();
@@ -1178,7 +1178,7 @@
           slice = *(gpointer*) (current + next_offset);
           if (G_UNLIKELY (allocator->config.debug_blocks) &&
               !smc_notify_free (current, mem_size))
-            abort();
+            g_abort();
           if (G_UNLIKELY (thread_memory_magazine2_is_full (tmem, ix)))
             {
               thread_memory_swap_magazines (tmem, ix);
@@ -1199,7 +1199,7 @@
           slice = *(gpointer*) (current + next_offset);
           if (G_UNLIKELY (allocator->config.debug_blocks) &&
               !smc_notify_free (current, mem_size))
-            abort();
+            g_abort();
           if (G_UNLIKELY (g_mem_gc_friendly))
             memset (current, 0, chunk_size);
           slab_allocator_free_chunk (chunk_size, current);
@@ -1213,7 +1213,7 @@
         slice = *(gpointer*) (current + next_offset);
         if (G_UNLIKELY (allocator->config.debug_blocks) &&
             !smc_notify_free (current, mem_size))
-          abort();
+          g_abort();
         if (G_UNLIKELY (g_mem_gc_friendly))
           memset (current, 0, mem_size);
         g_free (current);
@@ -1452,7 +1452,7 @@
   vfprintf (stderr, format, args);
   va_end (args);
   fputs ("\n", stderr);
-  abort();
+  g_abort();
   _exit (1);
 }
 
diff -ur glib-2.37.4.orig/glib/gtester.c glib-2.37.4/glib/gtester.c
--- glib/gtester.c	2013-06-02 23:20:49.000000000 +0000
+++ glib/gtester.c	2013-07-28 20:00:48.964249400 +0000
@@ -96,7 +96,7 @@
 terminate (void)
 {
   kill (getpid(), SIGTERM);
-  abort();
+  g_abort();
 }
 
 static void
diff -ur glib-2.37.4.orig/glib/gthread-posix.c glib-2.37.4/glib/gthread-posix.c
--- glib/gthread-posix.c	2013-07-09 16:45:56.000000000 +0000
+++ glib/gthread-posix.c	2013-07-28 20:01:09.374341100 +0000
@@ -76,7 +76,7 @@
 {
   fprintf (stderr, "GLib (gthread-posix.c): Unexpected error from C library during '%s': %s.  Aborting.\n",
            function, strerror (status));
-  abort ();
+  g_abort ();
 }
 
 /* {{{1 GMutex */
diff -ur glib-2.37.4.orig/glib/gthread-win32.c glib-2.37.4/glib/gthread-win32.c
--- glib/gthread-win32.c	2013-06-02 23:20:49.000000000 +0000
+++ glib/gthread-win32.c	2013-07-28 20:01:13.008802600 +0000
@@ -60,7 +60,7 @@
 {
   fprintf (stderr, "GLib (gthread-win32.c): Unexpected error from C library during '%s': %s.  Aborting.\n",
            strerror (status), function);
-  abort ();
+  g_abort ();
 }
 
 /* Starting with Vista and Windows 2008, we have access to the
diff -ur glib-2.37.4.orig/glib/gutils.c glib-2.37.4/glib/gutils.c
--- glib/gutils.c	2013-06-11 02:14:02.000000000 +0000
+++ glib/gutils.c	2013-07-28 19:57:12.280734000 +0000
@@ -2433,3 +2433,15 @@
   return FALSE;
 #endif
 }
+
+/* Crashes the program. */
+void
+g_abort (void)
+{
+#ifdef G_OS_WIN32
+  DebugBreak ();
+  ExitProcess (127);
+#else
+  abort ();
+#endif
+}
diff -ur glib-2.37.4.orig/glib/gutils.h glib-2.37.4/glib/gutils.h
--- glib/gutils.h	2013-06-11 02:14:02.000000000 +0000
+++ glib/gutils.h	2013-07-28 19:58:22.568659500 +0000
@@ -230,6 +230,9 @@
 GLIB_DEPRECATED_FOR(g_format_size)
 gchar *g_format_size_for_display (goffset size);
 
+GLIB_AVAILABLE_IN_2_30
+void g_abort (void);
+
 #ifndef G_DISABLE_DEPRECATED
 /**
  * GVoidFunc:
--- glib/gthread-posix.c.orig	2013-07-28 20:02:38.456653100 +0000
+++ glib/gthread-posix.c	2013-07-28 20:06:34.756159300 +0000
@@ -47,6 +47,7 @@
 #include "gmessages.h"
 #include "gstrfuncs.h"
 #include "gmain.h"
+#include "gutils.h"
 
 #include <stdlib.h>
 #include <stdio.h>
--- glib/gtestutils.c.orig	2014-01-09 03:58:06.000000000 +0000
+++ glib/gtestutils.c	2014-01-22 22:42:53.192017800 +0000
@@ -764,7 +764,7 @@
         {
           if (test_tap_log)
             g_print ("Bail out!\n");
-          abort();
+          g_abort();
         }
       if (largs[0] == G_TEST_RUN_SKIPPED)
         test_skipped_count++;
@@ -2349,7 +2349,7 @@
       _exit (1);
     }
   else
-    abort ();
+    g_abort ();
 }
 
 void
@@ -2374,7 +2374,7 @@
   if (test_in_subprocess)
     _exit (1);
   else
-    abort ();
+    g_abort ();
 }
 
 void
