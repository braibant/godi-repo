--- ../../work-ref/cubicle-1.0/configure.in	2014-07-21 19:08:22.000000000 +0200
+++ ./configure.in	2014-08-07 17:30:36.059600000 +0200
@@ -20,9 +20,9 @@
 	AC_MSG_ERROR(Cannot find ocamlc.)
 fi
 
-OCAMLVERSION=`$OCAMLC -version`
+OCAMLVERSION=`$OCAMLC -version | sed 's|\r$||'`
 echo "ocaml version is $OCAMLVERSION"
-OCAMLLIB=`$OCAMLC -where`
+OCAMLLIB=`$OCAMLC -where | sed 's|\r$||'`
 echo "ocaml library path is $OCAMLLIB"
 
 # we look for ocamlfind; if not present, we just don't use it to find
@@ -30,7 +30,7 @@
 AC_CHECK_PROG(USEOCAMLFIND,ocamlfind,yes,no)
 
 if test "$USEOCAMLFIND" = yes; then
-   OCAMLFINDLIB=$(ocamlfind printconf stdlib)
+   OCAMLFINDLIB=$(ocamlfind printconf stdlib | sed 's|\r$||')
    OCAMLFIND=$(which ocamlfind)
    if test "$OCAMLFINDLIB" != "$OCAMLLIB"; then
     USEOCAMLFIND=no;
@@ -67,7 +67,7 @@
 #looking for functory library
 
 if test "$USEOCAMLFIND" = yes; then
-  FUNCTORYLIB=$(ocamlfind query -i-format functory)
+  FUNCTORYLIB=$(ocamlfind query -i-format functory | sed 's|\r$||')
 fi
 
 if test -n "$FUNCTORYLIB";then
@@ -85,7 +85,8 @@
 
 
 AC_MSG_CHECKING(platform)
-if echo "let _ = Sys.os_type" | ocaml | grep -q Win32; then
+echo "print_endline Sys.os_type" > check_arch.ml
+if ocaml check_arch.ml | grep -q Win32; then
     echo "Windows platform"
     AC_MSG_RESULT(Win32)
     OCAMLWIN32=yes
@@ -95,6 +96,7 @@
     OCAMLWIN32=no
     EXE=
 fi
+rm -f check_arch.ml
 
 AC_SUBST(OCAMLC)
 AC_SUBST(OCAMLOPT)
--- ../../work-ref/cubicle-1.0/configure	2014-07-21 19:08:22.000000000 +0200
+++ ./configure	2014-08-07 17:30:37.884800000 +0200
@@ -1716,9 +1716,9 @@
 	as_fn_error $? "Cannot find ocamlc." "$LINENO" 5
 fi
 
-OCAMLVERSION=`$OCAMLC -version`
+OCAMLVERSION=`$OCAMLC -version | sed 's|\r$||'`
 echo "ocaml version is $OCAMLVERSION"
-OCAMLLIB=`$OCAMLC -where`
+OCAMLLIB=`$OCAMLC -where | sed 's|\r$||'`
 echo "ocaml library path is $OCAMLLIB"
 
 # we look for ocamlfind; if not present, we just don't use it to find
@@ -1763,7 +1763,7 @@
 
 
 if test "$USEOCAMLFIND" = yes; then
-   OCAMLFINDLIB=$(ocamlfind printconf stdlib)
+   OCAMLFINDLIB=$(ocamlfind printconf stdlib | sed 's|\r$||')
    OCAMLFIND=$(which ocamlfind)
    if test "$OCAMLFINDLIB" != "$OCAMLLIB"; then
     USEOCAMLFIND=no;
@@ -1949,7 +1949,7 @@
 #looking for functory library
 
 if test "$USEOCAMLFIND" = yes; then
-  FUNCTORYLIB=$(ocamlfind query -i-format functory)
+  FUNCTORYLIB=$(ocamlfind query -i-format functory | sed 's|\r$||')
 fi
 
 if test -n "$FUNCTORYLIB";then
@@ -1991,7 +1991,8 @@
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking platform" >&5
 $as_echo_n "checking platform... " >&6; }
-if echo "let _ = Sys.os_type" | ocaml | grep -q Win32; then
+echo "print_endline Sys.os_type" > check_arch.ml
+if ocaml check_arch.ml | grep -q Win32; then
     echo "Windows platform"
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: Win32" >&5
 $as_echo "Win32" >&6; }
@@ -2002,6 +2003,7 @@
     OCAMLWIN32=no
     EXE=
 fi
+rm -f check_arch.ml
 
 
 
