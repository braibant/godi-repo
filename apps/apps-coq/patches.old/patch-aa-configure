--- configure.orig	2013-12-21 08:03:14.000000000 +0000
+++ configure	2014-03-06 10:58:57.233200000 +0000
@@ -1051,12 +1051,12 @@
 esac
 
 case $libdir_spec in
-    yes) LIBDIR_OPTION="Some \"$LIBDIR\"";;
+    yes) LIBDIR_OPTION="Some (help_def \"lib/coq\" \"$LIBDIR\")";;
     *) LIBDIR_OPTION="None";;
 esac
 
 case $configdir_spec in
-    yes) CONFIGDIR_OPTION="Some \"$CONFIGDIR\"";;
+    yes) CONFIGDIR_OPTION="Some (help_def \"config\" \"$CONFIGDIR\")";;
     *) CONFIGDIR_OPTION="None";;
 esac
 
@@ -1072,13 +1072,32 @@
 rm -f "$mlconfig_file"
 cat << END_OF_COQ_CONFIG > $mlconfig_file
 (* DO NOT EDIT THIS FILE: automatically generated by ../configure *)
+let coqroot =
+ try
+   let x = Sys.getenv "COQROOT" in
+   if Sys.is_directory x then
+     Some x
+   else
+     None
+ with
+ | _ -> None
+
+let help_def rel_dir def =
+ match coqroot with
+ | None -> def
+ | Some x ->
+   let dir = x ^ "/" ^ rel_dir in
+   if Sys.file_exists dir then
+     dir
+   else
+     def
 
 let local = $local
 let coqrunbyteflags = "$COQRUNBYTEFLAGS"
 let coqlib = $LIBDIR_OPTION
 let configdir = $CONFIGDIR_OPTION
 let datadir = $DATADIR_OPTION
-let docdir = "$DOCDIR"
+let docdir = help_def "doc/apps-coq" "$DOCDIR"
 let ocaml = "$ocamlexec"
 let ocamlc = "$bytecamlc"
 let ocamlopt = "$nativecamlc"
@@ -1087,14 +1106,27 @@
 let ocamldoc = "$ocamldocexec"
 let ocamlyacc = "$ocamlyaccexec"
 let ocamllex = "$ocamllexexec"
-let camlbin = "$CAMLBIN"
-let camllib = "$CAMLLIB"
+let camlbin = help_def "bin" "$CAMLBIN"
+let camllib = help_def "lib/ocaml/std-lib" "$CAMLLIB"
 let camlp4 = "$CAMLP4"
 let camlp4o = "$camlp4oexec"
-let camlp4bin = "$CAMLP4BIN"
-let camlp4lib = "$CAMLP4LIB"
+let camlp4bin = help_def "bin" "$CAMLP4BIN"
+let camlp4lib = help_def "lib/ocaml/std-lib/camlp5" "$CAMLP4LIB"
 let camlp4compat = "$CAMLP4COMPAT"
-let coqideincl = "$LABLGTKINCLUDES"
+let coqideincl =
+  let def = "$LABLGTKINCLUDES" in
+  match coqroot with
+  | None ->  def
+  | Some x ->
+   let dir = x ^ "lib/ocaml/pkg-lib/lablgtk2" in
+   try
+     if Sys.is_directory dir then
+       "- I " ^ dir
+     else
+       def
+   with
+   | _ -> def
+
 let cflags = "$cflags"
 let best = "$best_compiler"
 let arch = "$ARCH"
