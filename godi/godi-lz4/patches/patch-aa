From 5055336b5bece8b332046954da25070752e7db9c Mon Sep 17 00:00:00 2001
From: fdopen <fdopen@ml.ignorelist.com>
Date: Wed, 27 Aug 2014 20:39:45 +0200
Subject: [PATCH] 32-bit fix (I)

compress_bound is not usable under 32-bit. 0x7E000000 is a negative number (with 31bit ints).
---
 lib/LZ4.ml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/LZ4.ml b/lib/LZ4.ml
index 530f484..fa3fedb 100644
--- lib/LZ4.ml
+++ lib/LZ4.ml
@@ -7,7 +7,7 @@ exception Corrupted
 
 let compress_bound sz =
   if sz < 0 then invalid_arg "LZ4.compress_bound";
-  if sz > 0x7E000000 then raise Input_too_large;
+  if Sys.word_size > 32 && sz > 0x7E000000 then raise Input_too_large;
   C.compressBound sz
 
 module type S = sig
From 57ee60b38983d61f39d49a3a0f11b425cdd8602c Mon Sep 17 00:00:00 2001
From: fdopen <fdopen@ml.ignorelist.com>
Date: Wed, 27 Aug 2014 20:41:20 +0200
Subject: [PATCH] 32-bit fix (II)

---
 lib_test/test_LZ4.ml | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/lib_test/test_LZ4.ml b/lib_test/test_LZ4.ml
index bceb39e..68a944e 100644
--- lib_test/test_LZ4.ml
+++ lib_test/test_LZ4.ml
@@ -3,7 +3,8 @@ open OUnit2
 let test_compress_bound ctxt =
   assert_equal ~printer:string_of_int 273 (LZ4.compress_bound 256);
   assert_raises LZ4.Input_too_large (fun () ->
-    LZ4.compress_bound 0x7E000001);
+    if Sys.word_size = 32 then raise LZ4.Input_too_large
+    else LZ4.compress_bound 0x7E000001);
   assert_raises (Invalid_argument "LZ4.compress_bound") (fun () ->
     LZ4.compress_bound (-1))
 
