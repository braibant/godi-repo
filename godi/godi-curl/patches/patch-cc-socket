--- curl-helper.c.orig	2014-03-08 06:35:04.000000000 +0000
+++ curl-helper.c	2014-05-02 18:17:07.904000000 +0000
@@ -17,6 +17,7 @@
 #include <caml/mlvalues.h>
 #include <caml/callback.h>
 #include <caml/fail.h>
+#include <caml/unixsupport.h>
 #include <caml/custom.h>
 
 #ifdef HAVE_CONFIG_H
@@ -6515,9 +6516,21 @@
  * Based on curl hiperfifo.c example
  */
 
-/* FIXME win32unix */
-#define Socket_val(v) Int_val(v)
+#ifdef _WIN32
+#ifndef Val_socket
+#define Val_socket(v) win_alloc_socket(v)
+#endif
+#ifndef Socket_val
+#error Socket_val not defined in unixsupport.h
+#endif
+#else /* _WIN32 */
+#ifndef Socket_val
+#define Socket_val(v) Long_val(v)
+#endif
+#ifndef Val_socket
 #define Val_socket(v) Val_int(v)
+#endif
+#endif  /* _WIN32 */
 
 static void raise_error(char const* msg)
 {
@@ -6557,9 +6570,16 @@
   CURLM* h = CURLM_val(v_multi);
   int still_running = 0;
   CURLMcode rc = CURLM_OK;
-  int socket = Socket_val(v_fd);
+  curl_socket_t socket ;
   int kind = 0;
 
+  if ( Long_val(v_fd) == -1 ){
+      socket = CURL_SOCKET_TIMEOUT;
+  }
+  else {
+      socket = Socket_val(v_fd);
+  }
+
   switch (Int_val(v_kind))
   {
     case 0 : break;
@@ -6604,7 +6624,7 @@
 static int curlm_sock_cb_nolock(CURL *e, curl_socket_t sock, int what, ml_multi_handle* multi, void *sockp)
 {
   CAMLparam0();
-  CAMLlocal1(v_what);
+  CAMLlocal2(v_what,csock);
   (void)e;
   (void)sockp; /* not used */
 
@@ -6621,9 +6641,9 @@
       fflush(stderr);
       raise_error("curlm_sock_cb"); /* FIXME exception from callback */
   }
-
+  csock=Val_socket(sock);
   caml_callback2(Field(multi->values,curlmopt_socket_function),
-                 Val_socket(sock), v_what);
+                 csock, v_what);
 
   CAMLreturn(0);
 }
