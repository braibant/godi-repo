--- ../../work-ref/ocaml-bytes-ocaml-bytes.1.1/bytes.ml	2014-05-23 14:24:31.000000000 +0200
+++ ./bytes.ml	2014-09-18 22:58:50.921600000 +0200
@@ -1,8 +1,36 @@
 include String
 
-let sub_string = sub
 let empty = ""
-let of_string x = x
-let to_string x = x
-external unsafe_to_string : t -> string = "%identity"
-external unsafe_of_string : string -> t = "%identity"
+let of_string = copy
+let to_string = copy
+
+let sub_string = sub
+let blit_string = blit
+
+let unsafe_to_string : t -> string = fun s -> s
+let unsafe_of_string : string -> t = fun s -> s
+
+let extend s left right =
+  (* length of the final string *)
+  let dstlen = left + length s + right in
+  (* length of the included portion of the input string *)
+  let srclen = min 0 left + length s + min 0 right in
+  let t = create dstlen in
+  if srclen > 0 then blit s (max 0 (-left)) t (max 0 left) srclen;
+  t
+
+let init len f =
+  let s = create len in
+  for i = 0 to len - 1 do
+    set s i (f i);
+  done;
+  s
+
+let mapi f input =
+  let output = create (length input) in
+  for i = 0 to length input - 1 do
+    output.[i] <- f i input.[i];
+  done;
+  output
+
+let cat = (^)
--- ../../work-ref/ocaml-bytes-ocaml-bytes.1.1/bytes.mli	2014-05-23 14:24:31.000000000 +0200
+++ ./bytes.mli	2014-09-18 23:00:37.001600000 +0200
@@ -4,5 +4,5 @@
 val of_string : string -> t
 val to_string : t -> string
 val sub_string : t -> int -> int -> string
-external unsafe_to_string : t -> string = "%identity"
-external unsafe_of_string : string -> t = "%identity"
+val unsafe_to_string : t -> string
+val unsafe_of_string : string -> t
