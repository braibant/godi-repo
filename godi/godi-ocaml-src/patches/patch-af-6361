From 89441430c5c92f651f379ce59b60ce00b8fb0ff0 Mon Sep 17 00:00:00 2001
From: Xavier Leroy <xavier.leroy@inria.fr>
Date: Sat, 26 Apr 2014 17:11:36 +0000
Subject: [PATCH] PR#6361: Hashtbl.hash not terminating on some lazy values w/
 recursive types

git-svn-id: http://caml.inria.fr/svn/ocaml/trunk@14693 f963ae5c-01c2-4b8c-9fe0-0dff7051ff02
---
 Changes        | 1 +
 byterun/hash.c | 5 ++++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git byterun/hash.c byterun/hash.c
index 3beb0e0..42cf613 100644
--- byterun/hash.c
+++ byterun/hash.c
@@ -213,7 +213,7 @@ CAMLprim value caml_hash(value count, value limit, value seed, value obj)
         for (i = 0, len = Wosize_val(v) / Double_wosize; i < len; i++) {
           h = caml_hash_mix_double(h, Double_field(v, i));
           num--;
-          if (num < 0) break;
+          if (num <= 0) break;
         }
         break;
       case Abstract_tag:
@@ -227,6 +227,9 @@ CAMLprim value caml_hash(value count, value limit, value seed, value obj)
         goto again;
       case Forward_tag:
         v = Forward_val(v);
+        /* PR#6361: this should count as 1, otherwise we can get into a loop */
+        num--;
+        if (num <= 0) break;
         goto again;
       case Object_tag:
         h = caml_hash_mix_intnat(h, Oid_val(v));
-- 
1.9.1

