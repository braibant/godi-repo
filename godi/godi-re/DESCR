RE is a regular expression library for OCaml.  It is still under
development, but is already rather usable.

The following styles of regular expressions are supported:
- Perl-style regular expressions (module Re_perl);
- Posix extended regular expressions (module Re_posix);
- Emacs-style regular expressions (module Re_emacs);
- Shell-style file globbing (module Re_glob).

It is also possible to build regular expressions by combining simpler
regular expressions (module Re)

The most notable missing features are back-references and
look-ahead/look-behind assertions.

The matches are performed by lazily building a DFA (deterministic
finite automata) from the regular expression.  As a consequence,
matching takes linear time in the length of the matched string.

The compilation of patterns is slower than with libraries using
back-tracking, such as PCRE.  But, once a large enough part of the
DFA is built, matching is extremely fast.

