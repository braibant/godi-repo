--- mk/build/mk/bsd.pkg.mk.orig	2013-04-14 13:03:20.000000000 +0000
+++ mk/build/mk/bsd.pkg.mk	2013-08-02 11:07:13.862000000 +0000
@@ -136,6 +136,8 @@
 #.  endif
 
 MAKE_PROGRAM=		${GMAKE}
+.elif defined(USE_GMAKE2)
+MAKE_PROGRAM=		${LOCALBASE}/sbin/make2.exe
 .else
 .if defined(USE_OMAKE)
 MAKE_PROGRAM=		${LOCALBASE}/bin/omake
@@ -258,6 +260,83 @@
 ESSENTIAL_ENV:=		${ESSENTIAL_ENV} ${_var}=${_value:Q}
 .endfor
 
+.if defined(W32PORT) && ${W32PORT} == "mingw"
+
+.if defined(C_INCLUDE_PATH)
+C_INCLUDE_PATH:=${LOCALBASE}/include:${C_INCLUDE_PATH}
+.else
+C_INCLUDE_PATH=${LOCALBASE}/include
+.endif
+MINGW_AUTOTOOLS_ENV+=	C_INCLUDE_PATH=${C_INCLUDE_PATH}
+
+.if defined(LIBRARY_PATH)
+LIBRARY_PATH:=${LOCALBASE}/lib:${LIBRARY_PATH}
+.else
+LIBRARY_PATH=${LOCALBASE}/lib
+.endif
+MINGW_AUTOTOOLS_ENV+=	LIBRARY_PATH=${LIBRARY_PATH}
+
+# try to enforce that the right, and currently only supported compiler is used
+
+# AS, AR,... are honoured by  recent versions of autools based scripts, but also
+# many other
+# MINGW_TOOL_PREFIX should be add to godi.conf by the bootstrap script
+.if defined(MINGW_TOOL_PREFIX) && ${MINGW_TOOL_PREFIX} != ""
+CPPFLAGS+=			-I${LOCALBASE}/include
+MINGW_AUTOTOOLS_ENV+=		AR=${MINGW_TOOL_PREFIX}ar
+MINGW_AUTOTOOLS_ENV+=		AS=${MINGW_TOOL_PREFIX}as
+# better set in /opt/godi/etc/godi.conf
+# MINGW_AUTOTOOLS_ENV+=		CC=${MINGW_TOOL_PREFIX}gcc
+MINGW_AUTOTOOLS_ENV+=		CPPFILT=${MINGW_TOOL_PREFIX}c++filt
+MINGW_AUTOTOOLS_ENV+=		CXX=${MINGW_TOOL_PREFIX}g++
+MINGW_AUTOTOOLS_ENV+=		DLLTOOL=${MINGW_TOOL_PREFIX}dlltool
+MINGW_AUTOTOOLS_ENV+=		DLLWRAP=${MINGW_TOOL_PREFIX}dllwrap
+MINGW_AUTOTOOLS_ENV+=		GCOV=${MINGW_TOOL_PREFIX}gcov
+MINGW_AUTOTOOLS_ENV+=		LD=${MINGW_TOOL_PREFIX}ld
+MINGW_AUTOTOOLS_ENV+=		NM=${MINGW_TOOL_PREFIX}nm
+MINGW_AUTOTOOLS_ENV+=		OBJCOPY=${MINGW_TOOL_PREFIX}objcopy
+MINGW_AUTOTOOLS_ENV+=		OBJDUMP=${MINGW_TOOL_PREFIX}objdump
+MINGW_AUTOTOOLS_ENV+=		RANLIB=${MINGW_TOOL_PREFIX}ranlib
+MINGW_AUTOTOOLS_ENV+=		RC=${MINGW_TOOL_PREFIX}windres
+MINGW_AUTOTOOLS_ENV+=		READELF=${MINGW_TOOL_PREFIX}readelf
+MINGW_AUTOTOOLS_ENV+=		SIZE=${MINGW_TOOL_PREFIX}size
+MINGW_AUTOTOOLS_ENV+=		STRINGS=${MINGW_TOOL_PREFIX}strip
+MINGW_AUTOTOOLS_ENV+=		STRIP=${MINGW_TOOL_PREFIX}strip
+MINGW_AUTOTOOLS_ENV+=		WINDMC=${MINGW_TOOL_PREFIX}windmc
+MINGW_AUTOTOOLS_ENV+=		WINDRES=${MINGW_TOOL_PREFIX}windres
+CPP=${MINGW_TOOL_PREFIX}cpp
+
+MAKE_ENV+=	${MINGW_AUTOTOOLS_ENV}
+CONFIGURE_ENV+=	${MINGW_AUTOTOOLS_ENV}
+
+.endif
+
+.if defined(MINGW_BIN_PATH) && ${MINGW_BIN_PATH} != ""
+# eg. /usr/x86_64-w64-mingw32/bin contains unprefixd versions of ld , strip, ...
+# however there is no unprefixed version for e.g. gcc
+# MINGW_BIN_PATH should be add to godi.conf by the bootsrap script
+PATH:=		${MINGW_BIN_PATH}:${PATH}
+.endif
+
+.if defined(MINGW_AUTOTOOLS_BUILD) && defined(MINGW_HOST) && ${MINGW_HOST} != ""
+# the x86_64-w64-mingw32/it686-w64-mingw32 packages from cygwin are cross
+# compilers. They are 32-bit cygwin programs, but can(!) compile to
+# code that is independend of cygwin. We need to tell configure scripts
+# that we want to do this.
+# MINGW_HOST should be add to godi.conf by the bootstrap script.
+# User can change it, if they want to generate faster code that is
+# restricted to their cpu
+CONFIGURE_ARGS+=	--host=${MINGW_HOST} --build=i686-pc-cygwin
+.endif
+.if defined(USE_OMAKE)
+MAKE_FLAGS+= 	LDFLAGS=${LDFLAGS:Q}
+MAKE_FLAGS+= 	CFLAGS=${CFLAGS:Q}
+.endif
+
+
+.endif
+
+
 # How to invoke "make" in wrkdir to build and install the software:
 MAKE_ENV+=		OPSYS=${OPSYS:Q}
 .if defined(W32PORT)
@@ -274,7 +353,15 @@
 MAKE_ENV+=		WHOLE_ARCHIVE_FLAG=${WHOLE_ARCHIVE_FLAG:Q}
 MAKE_ENV+=		NO_WHOLE_ARCHIVE_FLAG=${NO_WHOLE_ARCHIVE_FLAG:Q}
 MAKE_ENV+=		LINK_ALL_LIBGCC_HACK=${LINK_ALL_LIBGCC_HACK:Q}
+
+.if defined(W32PORT) && ${W32PORT} == "mingw"
+# We always need a backup copy of flexdll because of circular dependencies
+# The files at ${LOCALBASE:Q}/lib/flexdll-backup are added during the deinstallation
+# of godi-flexdll
+MAKE_ENV+=		PATH=${LOCALBASE:Q}/bin:${LOCALBASE:Q}/lib/flexdll-backup/bin:${PATH:Q}
+.else
 MAKE_ENV+=		PATH=${LOCALBASE:Q}/bin:${PATH:Q}
+.endif
 MAKE_ENV+=		PREFIX=${PREFIX:Q}
 MAKE_ENV+= 		LOCALBASE=${LOCALBASE:Q}
 MAKE_ENV+= 		LOCALBASE_NATIVE=${LOCALBASE_NATIVE:Q}
@@ -317,7 +404,12 @@
 CONFIGURE_ENV+=		ELF_RPATH_FLAG=${ELF_RPATH_FLAG:Q}
 CONFIGURE_ENV+=		RPATH_FLAG=${RPATH_FLAG:Q}
 .endif
+.if defined(W32PORT) && ${W32PORT} == "mingw"
+# see corresponding comment at MAKE_ENV
+CONFIGURE_ENV+=		PATH=${LOCALBASE:Q}/bin:${LOCALBASE:Q}/lib/flexdll-backup/bin:${PATH:Q}
+.else
 CONFIGURE_ENV+=		PATH=${LOCALBASE:Q}/bin:${PATH:Q}
+.endif
 CONFIGURE_ENV+=		PREFIX=${PREFIX:Q}
 CONFIGURE_ENV+= 	LOCALBASE=${LOCALBASE:Q}
 CONFIGURE_ENV+= 	LOCALBASE_NATIVE=${LOCALBASE_NATIVE:Q}
@@ -390,7 +482,14 @@
 GODI_SCRIPT ?= ${LOCALBASE}/bin/godi_script
 
 .if defined(CONF_SCRIPT) && ${CONF_SCRIPT:M*.gcs} != ""
-CONFIGURE_SCRIPT:=${GODI_SCRIPT} ${.CURDIR}/${CONF_SCRIPT}
+
+.if defined(W32PORT) && ${W32PORT} == "mingw"
+CONF_SCRIPT_REAL=${:! cygpath -m "${.CURDIR}/${CONF_SCRIPT}" !}
+.else
+CONF_SCRIPT_REAL=${.CURDIR}/${CONF_SCRIPT}
+.endif
+
+CONFIGURE_SCRIPT:=${GODI_SCRIPT} ${.CURDIR}/${CONF_SCRIPT_REAL}
 BUILD_DEPENDS += godi-core-script-*
 .else
 .  if defined(CONF_SCRIPT_TEXT)
@@ -406,7 +505,11 @@
 CONFIGURE_SCRIPT:=${GODI_SCRIPT} -c ${CONF_SCRIPT_FULL_TEXT:Q}
 BUILD_DEPENDS += godi-core-script>=3.0.18
 .  else
-CONFIGURE_SCRIPT:=${.CURDIR}/${CONF_SCRIPT}
+.if defined(W32PORT) && ${W32PORT} == "mingw"
+CONFIGURE_SCRIPT=${:! cygpath -m "${.CURDIR}/${CONF_SCRIPT}" !}
+.else
+CONFIGURE_SCRIPT=${.CURDIR}/${CONF_SCRIPT}
+.endif
 .  endif
 .endif
 
@@ -442,6 +545,148 @@
 AUTOGENERATE_IMAGE=	${WRKDIR}/image/${LOCALBASE}
 .endif
 
+# --- WINOASIS ---
+.if defined(WINOASIS) && ${WINOASIS} == "yes"
+HAS_CONFIGURE=		yes
+WINOASIS_SETUP?=	yes
+WINOASIS_DISABLE_DEBUG?=no
+WINOASIS_DISABLE_DOCS?=	no
+WINOASIS_DISABLE_TESTS?=no
+WINOASIS_USE_BASH?=	no
+MAINTAINER?=		oasis@ml.ignorelist.com
+
+CONFIGURE_ENV+=	${BUILD_OCAMLFIND_ENV}
+MAKE_ENV+=	${BUILD_OCAMLFIND_ENV}
+
+
+WINOASIS_IMAGEDIR=  	${WRKDIR}/image
+WINOASIS_IMAGEDIRWIN=	${:! cygpath -m "${WINOASIS_IMAGEDIR}" !}
+CONFIGURE_ARGS+= --prefix ${LOCALBASE}
+CONFIGURE_ARGS+= --docdir ${LOCALBASE}/doc/${PKGBASE}
+CONFIGURE_ARGS+= --mandir  ${LOCALBASE}/man
+CONFIGURE_ARGS+= --datadir ${LOCALBASE}/share
+CONFIGURE_ARGS+= --destdir ${WINOASIS_IMAGEDIRWIN}
+
+AUTOGENERATE_PLIST=	yes
+AUTOGENERATE_IMAGE=	${WINOASIS_IMAGEDIRWIN}/${LOCALBASE}
+INSTALL_ENV+=		OCAMLFIND_DESTDIR=${AUTOGENERATE_IMAGE:Q}/lib/ocaml/pkg-lib
+
+.if ${WINOASIS_DISABLE_TESTS} == "yes"
+CONFIGURE_ARGS+= --disable-tests
+.elif ${WINOASIS_DISABLE_TESTS} == "no"
+CONFIGURE_ARGS+= --enable-tests
+.endif
+
+.if ${WINOASIS_DISABLE_DOCS} == "yes"
+CONFIGURE_ARGS+= --disable-docs
+.elif ${WINOASIS_DISABLE_DOCS} == "no"
+CONFIGURE_ARGS+= --enable-docs
+.endif
+
+.if ${WINOASIS_DISABLE_DEBUG} == "yes"
+CONFIGURE_ARGS+= --disable-debug
+.elif ${WINOASIS_DISABLE_DEBUG} == "no"
+CONFIGURE_ARGS+= --enable-debug
+.endif
+
+.if ${WINOASIS_USE_BASH} == "yes"
+WINOASIS_BASH_CMD=	${:! cygpath -m "/bin/bash.exe" !}
+CONFIGURE_ARGS+= --use-bash ${WINOASIS_BASH_CMD:Q}
+.endif
+
+.if ${WINOASIS_SETUP} == "yes"
+BUILD_DEPENDS+= apps-oasis>0.3.0:../../apps/apps-oasis
+.endif
+
+CONFIGURE_SCRIPT?= ${MAKE} -C ${PKGDIR:Q} ${MAKEFLAGS} winoasis-configure
+
+winoasis-configure:
+.script
+.  import LOCALBASE WRKSRC
+.  import WINOASIS_SETUP CONFIGURE_ARGS
+.  expand
+	${_PKG_SILENT}${_PKG_DEBUG}
+.  noexpand
+set -e
+unset DEBUG PROFILE TEST TESTS
+cd "$WRKSRC"
+if [ "$WINOASIS_SETUP" = "yes" ]; then
+	${LOCALBASE}/bin/oasis setup
+fi
+echo ${LOCALBASE}/bin/ocaml setup.ml -configure $CONFIGURE_ARGS
+${LOCALBASE}/bin/ocaml setup.ml -configure $CONFIGURE_ARGS
+.endscript
+
+
+
+BUILD_SCRIPT?=	${MAKE} -C ${PKGDIR:Q} ${MAKEFLAGS} winoasis-build
+
+winoasis-build:
+.script
+.  import LOCALBASE WRKSRC WINOASIS_DISABLE_TESTS WINOASIS_DISABLE_DOCS
+.  expand
+	${_PKG_SILENT}${_PKG_DEBUG}
+.  noexpand
+set -e
+unset DEBUG PROFILE TEST TESTS
+cd "${WRKSRC}"
+${LOCALBASE}/bin/ocaml setup.ml -build
+if [ "$WINOASIS_DISABLE_TESTS" = "no" ]; then
+	${LOCALBASE}/bin/ocaml setup.ml -test
+fi
+if [ "$WINOASIS_DISABLE_DOCS" = "no" ]; then
+	${LOCALBASE}/bin/ocaml setup.ml -doc
+fi
+.endscript
+
+INSTALL_SCRIPT?= ${MAKE} -C ${PKGDIR:Q} ${MAKEFLAGS} winoasis-install
+
+winoasis-install:
+.script
+.  import INSTALL WINOASIS_IMAGEDIR LOCALBASE PKGBASE WRKSRC GREP FILE_CMD
+.  expand
+	${_PKG_SILENT}${_PKG_DEBUG}
+.  noexpand
+set -e
+unset DEBUG PROFILE TEST TESTS
+
+${INSTALL} -m 0755 -d "${WINOASIS_IMAGEDIR}/${LOCALBASE}/doc/${PKGBASE}"
+cd "${WRKSRC}"
+
+${LOCALBASE}/bin/ocaml setup.ml -install
+
+for F in *.[Tt][Xx][Tt] *.[Mm][Dd] *.[Hh][Tt][Mm] *.[Hh][Tt][Mm][Ll] *.[Cc][Ss][Ss] *.[Pp][Dd][Ff] \
+	 [Aa][Uu][Tt][Hh][Oo][Rr][Ss] [Rr][Ee][Aa][Dd][Mm][Ee] [Ll][Ii][Cc][Ee][Nn][Ss][Ee] [Tt][Oo][Dd][Oo] \
+	[Cc][Hh][Aa][Nn][Gg][Ee][Ss] [Cc][Oo][Pp][Yy][Ii][Nn][Gg] [Cc][Hh][Aa][Nn][Gg][Ee][Ll][Oo][Gg] \
+	[Vv][Ee][Rr][Ss][Ii][Oo][Nn] [Gg][Pp][Ll] [Ll][Gg][Pp][Ll] [Mm][Ii][Tt] [Ii][Nn][Ss][Tt][Aa][Ll][Ll] ; do
+	if [ -f "$F" ] && [ ! -h "$F" ]; then
+	  $INSTALL -m 0644 "$F" "${WINOASIS_IMAGEDIR}/${LOCALBASE}/doc/${PKGBASE}"
+	fi
+done
+
+for F in * ; do
+	ok=0
+	case "$F" in
+	*.*)
+	  ok=0
+	;;
+	[A-Za-z]*)
+	  ok=1
+	;;
+	*)
+	  ok=0
+	;;
+	esac
+	if [ $ok -eq 1 ] && [ -f "$F" ] && [ ! -h "$F" ] ; then
+	   if $FILE_CMD "$F" | $GREP -q -i ' text' ; then
+		$INSTALL -m 0644 "$F" "${WINOASIS_IMAGEDIR}/${LOCALBASE}/doc/${PKGBASE}"
+	   fi
+	fi
+done
+.	endscript
+
+.endif
+
 
 # --- other ---
 
@@ -623,10 +868,12 @@
 			${DEPENDS:D-set-dependencies ${DEPENDS:QQ}} \
 			${BUILD_DEPENDS:D-set-build-dependencies ${BUILD_DEPENDS:QQ}} \
 			${CONFLICTS:D-set-conflicts ${CONFLICTS:QQ}} \
-			${INSTALL_FILE:D-set-install-message-file ${INSTALL_FILE:QQ}} \
+			${INSTALL_MESSAGE_FILE:D-set-install-message-file ${INSTALL_MESSAGE_FILE:QQ}} \
 			${PKG_PRESERVE:D-set-preserve true} \
 			${INSTALL_FILE:D-set-install-script ${INSTALL_FILE:QQ}} \
 			${DEINSTALL_FILE:D-set-deinstall-script ${DEINSTALL_FILE:QQ}} \
+			${INSTALL_SCRIPT_FILE:D-set-install-script-file ${INSTALL_SCRIPT_FILE:QQ}} \
+			${DEINSTALL_SCRIPT_FILE:D-set-deinstall-script-file ${DEINSTALL_SCRIPT_FILE:QQ}} \
 			${SRC_FPRINT:D-set-src-fingerprint ${SRC_FPRINT:QQ}}
 
 ######################################################################
@@ -637,15 +884,23 @@
 INSTALL_TARGET?=	install
 
 CONFIGURE_SCRIPT?=	./configure
+.if !defined(USE_OMAKE)
 BUILD_SCRIPT?=		${MAKE_PROGRAM} ${MAKE_FLAGS} -f ${MAKEFILE:Q} \
 			  ${ALL_TARGET}
+INSTALL_SCRIPT?=	${MAKE_PROGRAM} ${MAKE_FLAGS} -f ${MAKEFILE:Q} \
+			  ${INSTALL_TARGET}
 .if defined(TEST_TARGET)
 TEST_SCRIPT?=		${MAKE_PROGRAM} ${MAKE_FLAGS} -f ${MAKEFILE:Q} \
 			  ${TEST_TARGET}
 .endif
+.else
+BUILD_SCRIPT?=		${MAKE_PROGRAM} ${MAKE_FLAGS} ${ALL_TARGET}
+INSTALL_SCRIPT?=	${MAKE_PROGRAM} ${MAKE_FLAGS} ${INSTALL_TARGET}
+.if defined(TEST_TARGET)
+TEST_SCRIPT?=		${MAKE_PROGRAM} ${MAKE_FLAGS} ${TEST_TARGET}
+.endif
+.endif
 
-INSTALL_SCRIPT?=	${MAKE_PROGRAM} ${MAKE_FLAGS} -f ${MAKEFILE:Q} \
-			  ${INSTALL_TARGET}
 
 ALLFILES?=	${DISTFILES}
 CKSUMFILES?=	${ALLFILES}
@@ -934,6 +1189,7 @@
 	    return 1
 	fi
 	source=`cat "$PKGDIR"/.source 2>/dev/null || true`
+	source=`echo "$source" | tr -d '\r'`
         for site in $sites; do
 	    right_source=0
 	    case "$site" in
@@ -1118,7 +1374,7 @@
 
 _EXTRACT_SUFFICES=	.tar.gz .tgz .tar.bz2 .tbz .tar.Z .tar
 _EXTRACT_SUFFICES+=	.shar.gz .shar.bz2 .shar.Z .shar
-_EXTRACT_SUFFICES+=	.Z .bz2 .gz
+_EXTRACT_SUFFICES+=	.Z .bz2 .gz .tar.xz .txz .xz .lzma
 
 ## GODI: We do not support zip, lha, zoo
 
@@ -1126,6 +1382,10 @@
 DECOMPRESS_CMD.tgz=		${DECOMPRESS_CMD.tar.gz}
 DECOMPRESS_CMD.tar.bz2=	 	${BZCAT}
 DECOMPRESS_CMD.tbz=		${DECOMPRESS_CMD.tar.bz2}
+#FIXME: integrate in configure script instead of hardcoded path
+DECOMPRESS_CMD.tar.xz=	 	/bin/xzcat
+DECOMPRESS_CMD.txz=		${DECOMPRESS_CMD.tar.xz}
+DECOMPRESS_CMD.tar.lzma=	/bin/lzcat
 DECOMPRESS_CMD.tar.Z=		${GZCAT}
 DECOMPRESS_CMD.tar=		${CAT}
 
@@ -1137,6 +1397,8 @@
 DECOMPRESS_CMD.Z=		${GZCAT}
 DECOMPRESS_CMD.bz2=		${BZCAT}
 DECOMPRESS_CMD.gz=		${GZCAT}
+DECOMPRESS_CMD.lzma=		/bin/lzcat
+DECOMPRESS_CMD.xz=		/bin/xzcat
 
 .undef EXTRACT_CMD.tar.gz
 .undef EXTRACT_CMD.tgz
@@ -1157,6 +1419,8 @@
 
 DOWNLOADED_DISTFILE=	$${extract_file}
 
+.if !defined(W32PORT) || ${W32PORT} != "mingw"
+
 .for __suffix__ in .gz .bz2 .Z
 EXTRACT_CMD${__suffix__}=	${DECOMPRESS_CMD${__suffix__}} "$${extract_file}" > `${BASENAME} "$${extract_file}" ${__suffix__}`
 .endfor
@@ -1181,6 +1445,28 @@
 .  endif
 .endfor
 
+.else
+
+.for __suffix__ in .gz .bz2 .Z .xz
+EXTRACT_CMD${__suffix__}=	${DECOMPRESS_CMD${__suffix__}} "$${extract_file}" > `${BASENAME} "$${extract_file}" ${__suffix__}`
+.endfor
+
+.for __suffix__ in .shar.gz .shar.bz2 .shar.Z .shar
+EXTRACT_CMD${__suffix__}=	${DECOMPRESS_CMD${__suffix__}} "$${extract_file}" | ${SH}
+.endfor
+
+_DFLT_EXTRACT_CMD=	${DECOMPRESS_CMD} "$${extract_file}" | /bin/tar --no-same-owner --no-same-permissions -xf- ${EXTRACT_ELEMENTS}
+
+.for __suffix__ in ${_EXTRACT_SUFFICES}
+.  if !defined(EXTRACT_CMD${__suffix__})
+EXTRACT_CMD${__suffix__}=	${DECOMPRESS_CMD${__suffix__}} "$${extract_file}" | /bin/tar --no-same-owner --no-same-permissions -xf- ${EXTRACT_ELEMENTS}
+.  endif
+.endfor
+
+.endif
+
+
+
 # _SHELL_EXTRACT is a "subroutine" for extracting an archive.  It extracts
 # the contents of archive named by the shell variable "extract_file" based
 # on the file extension of the archive.
@@ -1201,6 +1487,9 @@
 	${_PKG_SILENT}${_PKG_DEBUG}					\
 	extract_file=${DISTDIR:Q}/${__file__:Q}; export extract_file;	\
 	cd ${WRKDIR:Q}; ${EXTRACT_CMD}
+.if defined(DISTNAME) && ${DISTNAME} != "" && ${DISTNAME} != "." && ${DISTNAME} != "./" && defined(W32PORT) && ${W32PORT} == "mingw"
+	@cd ${WRKDIR:Q} && ${LOCALBASE}/lib/godi/replacesymlinks.sh ${DISTNAME:Q}
+.endif
 .  endfor
 .  if defined(DISTNAME) && !empty(DISTNAME)
 	${MKDIR} ${WRKSRC}
@@ -1378,7 +1667,8 @@
 INCR_PATCH_FN=
 .text
 incr_patch() {
-    ocaml /dev/stdin "$1" <<'EOF'
+    tmpx="$(mktemp)"
+    cat - >"$tmpx"  <<'EOF'
 (* --- ocaml script --- *)
 let p = Sys.argv.(1);;
 let c1 =
@@ -1405,6 +1695,8 @@
 print_endline q;;
 (* --- END ocaml script '` --- *)
 EOF
+  ocaml "$(cygpath -m "$tmpx")" "$1"
+  rm "$tmpx"
 }
 .endtext
 
@@ -1500,7 +1792,7 @@
 	     $SED -e 's/^file-//')"
 	if expr "x$f" '>' "x$p" >/dev/null; then p="$f"; fi
         # Increase p by 1
-	q="$(incr_patch "$p")"
+	q="$(incr_patch "$p" | tr -d '\r' )"
         # Save patch
 	$MKDIR "$patchdir"
 	if [ -s "$PATCHREF/diff" ]; then
@@ -1567,9 +1859,15 @@
 do-configure:
 .  if defined(HAS_CONFIGURE)
 .    for DIR in ${CONFIGURE_DIRS}
+.    if defined(WINOASIS) && ${WINOASIS} == "yes"
+	${_PKG_SILENT}${_PKG_DEBUG}${_ULIMIT_CMD}cd ${DIR:Q} && ${SETENV} \
+	    ${CONFIGURE_ENV} ${SANDBOX_CONFIGURE_CMD} \
+            ${CONFIGURE_SCRIPT}
+.    else
 	${_PKG_SILENT}${_PKG_DEBUG}${_ULIMIT_CMD}cd ${DIR:Q} && ${SETENV} \
 	    ${CONFIGURE_ENV} ${SANDBOX_CONFIGURE_CMD} \
             ${CONFIGURE_SCRIPT} ${CONFIGURE_ARGS}
+.    endif
 .    endfor
 .  endif
 .endif
@@ -1823,7 +2121,7 @@
 ${FLIST}:
 	${_PKG_SILENT}${_PKG_DEBUG}\
 	${MAKE} -C ${.CURDIR:Q} ${MAKEFLAGS} file-list-pkg > ${FLIST}
-
+	${_PKG_SILENT}${_PKG_DEBUG} dos2unix -q ${FLIST}
 
 .PHONY: file-list-pkg
 .if !target(file-list-pkg)
@@ -1903,6 +2201,11 @@
 	     echo "exists ($file)" ;;
 	 esac
        done
+       echo "--- TIMESTAMP ---"
+       rpdir="$(cygpath "$REGISTER_PREFIX")"
+       cat "$FLIST" | ( \
+	cd "$rpdir" && xargs stat -c "%n %Y" | \
+	  md5sum | awk '{print $1}' )
      } < $FLIST > $BUILD_VERSION_FILE
 .  endscript
 
@@ -1975,7 +2278,7 @@
 	    exit 1
 	  fi
 	fi
-	out_name=`${PKG_PTOOL} -in-installed ${PKGNAME} -out-binary ${PKGREPOSITORY} -print-out-name`
+	out_name=`${PKG_PTOOL} -in-installed ${PKGNAME} -out-binary ${PKGREPOSITORY} -print-out-name | tr -d '\r'`
 	if [ -n "$out_name" ]; then
 		base_out_name=`basename "$out_name"`
 		make_package_links "$base_out_name" || exit
@@ -2474,7 +2777,7 @@
 CP_REG_FILE=${LOCALBASE}/build/files_registered
 CP_ACT_FILE=${LOCALBASE}/build/files_actual  
 
-CHECKPOINT_DIRS = ${LOCALBASE_DIRS}
+CHECKPOINT_DIRS = ${LOCALBASE_DIRS} ${CHECKPOINT_DIRS_ADDITIONS}
 
 .PHONY: checkpoint
 checkpoint:
@@ -2497,7 +2800,7 @@
         find ${CHECKPOINT_DIRS} -type f -o -type l 2>/dev/null | \
             LC_ALL=C sort | uniq >${CP_ACT_FILE}
 	${_PKG_SILENT}${_PKG_DEBUG}                                    \
-	if ! cmp ${CP_REG_FILE} ${CP_ACT_FILE} >/dev/null 2>/dev/null; then \
+	if ! diff -b -B ${CP_REG_FILE} ${CP_ACT_FILE} >/dev/null 2>/dev/null; then \
             echo "### PLIST incorrect: ${PKGNAME}"; \
             echo "### Unregistered files:"; \
 	    if comm --version >/dev/null 2>/dev/null; then \
@@ -2610,7 +2913,7 @@
 	test -f Makefile
 	test -f DESCR
 	test -f distinfo
-	test -f PLIST -o -f PLIST.godi
+#       test -f PLIST -o -f PLIST.godi
 .script
 .expand
 	${_PKG_SILENT}${_PKG_DEBUG}
@@ -2659,7 +2962,7 @@
 .script
 .expand
 	${_PKG_SILENT}${_PKG_DEBUG}
-	${MKDIR} "${EXPORT_PROFILES}"
+	${MKDIR} -p "${EXPORT_PROFILES}"
 	${PKG_TOOLS_BIN}/godi_console rprofile \
 		-site "${EXPORT_PROFILES}" \
 		-put "${EXPORT_PROFILE_NAME}"
@@ -2674,7 +2977,7 @@
 	${_PKG_SILENT}${_PKG_DEBUG}
 	${MKDIR} "${EXPORT_PACKAGES}"
 	out_name=`${PKG_PTOOL} -in-installed ${PKGNAME} \
-		-out-binary ${EXPORT_PACKAGES:QQ} -print-out-name`
+		-out-binary ${EXPORT_PACKAGES:QQ} -print-out-name | tr -d '\r'`
 	if [ -n "$$out_name" ]; then
 		${PKG_PTOOL} -in-binary "$$out_name" -out-manifest \
 			>> ${EXPORT_PACKAGES:QQ}/PKGMANIFEST
