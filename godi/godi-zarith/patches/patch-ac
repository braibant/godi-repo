--- ../../work-ref/zarith-1.2/z.mlip	2012-04-30 21:28:21.000000000 +0200
+++ ./z.mlip	2014-07-31 13:21:40.423600000 +0200
@@ -60,7 +60,7 @@
 val minus_one: t
 (** The number -1. *)
 
-val of_int: int -> t
+external of_int: int -> t = "ml_z_of_int"
 (** Converts from a base integer. *)
 
 external of_int32: int32 -> t = "ml_z_of_int32"
@@ -499,7 +499,7 @@
 external (~-): t -> t = neg@ASM
 (** Negation [neg]. *)
 
-external (~+): t -> t = "%identity"
+val (~+): t -> t
 (** Identity. *)
 
 external (+): t -> t -> t = add@ASM
@@ -544,7 +544,7 @@
 external (asr): t -> int -> t = shift_right@ASM
 (** Bit-wise shift to the right [shift_right]. *)
 
-external (~$): int -> t = "%identity" 
+external (~$): int -> t = "ml_z_of_int"
 (** Conversion from [int] [of_int]. *)
 
 external ( ** ): t -> int -> t = "ml_z_pow"
--- ../../work-ref/zarith-1.2/z.mlp	2012-04-30 21:28:21.000000000 +0200
+++ ./z.mlp	2014-07-31 13:21:40.423600000 +0200
@@ -86,7 +86,7 @@
 external to_bits: t -> string = "ml_z_to_bits"
 external of_bits: string -> t = "ml_z_of_bits"
 
-external of_int: int -> t = "%identity" (* it's magic... *)
+external of_int: int -> t = "ml_z_of_int"
 
 let zero = of_int 0
 let one = of_int 1
@@ -143,7 +143,7 @@
 let pp_print f x = Format.pp_print_string f (to_string x)
 
 external (~-): t -> t = neg@ASM
-external (~+): t -> t = "%identity"
+let (~+) x = x
 external (+): t -> t -> t = add@ASM
 external (-): t -> t -> t = sub@ASM
 external ( * ): t -> t -> t = mul@ASM
@@ -158,7 +158,7 @@
 external (~!): t -> t = lognot@ASM
 external (lsl): t -> int -> t = shift_left@ASM
 external (asr): t -> int -> t = shift_right@ASM
-external (~$): int -> t = "%identity" 
+external (~$): int -> t = "ml_z_of_int"
 external ( ** ): t -> int -> t = "ml_z_pow"
 
 let version = @VERSION
